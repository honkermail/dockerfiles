version: '3'
services:
  golang:
    environment:
      MIRROR_SOURCE: tencent
    image: hopher/golang:1.12
    container_name: my_golang
    build:
      context: .
      dockerfile: ./services/go/Dockerfile
    ports:
      - "1313:1313"
    volumes:
      # Golang config
      - src:/go/src:rw
      - ./services/go/bin:/go/bin:rw
      - ./services/go/pkg:/go/pkg:rw
      # Git and ssh config
      - ~/.ssh:/root/.ssh:ro # Change - ssh key needed to push to github
      - ~/.gitconfig:/root/.gitconfig:ro  # Change - git config needed for user details
      #- /tmp/ssh_auth_sock:/tmp/ssh_auth_sock #Static - needed to push to github without prompt
    stdin_open: true
    tty: true
    restart: always
  php:
    environment:
      MIRROR_SOURCE: aliyun
    image: hopher/php:7.1-fpm
    container_name: my_php
    build:
      context: .
      dockerfile: ./services/php/v7.1/Dockerfile
      args:
        INSTALL_SWOOLE: "false"      
    ports:
      - "9501:9501"
      - "9502:9502"
      - "9503:9503"
    volumes:
      - src:/var/www/html:rw
#      - ./services/php/etc:/usr/local/etc:ro
    restart: always
    command: php-fpm

  mysql:
    environment:
      MIRROR_SOURCE: tencent    
    image: hopher/mysql:5.7
    container_name: my_mysql
    build:
      context: .
      dockerfile: ./services/mysql/Dockerfile    
    ports:
      - "3306:3306"
    volumes:
      - ./services/mysql/data:/var/lib/mysql:rw
      - ./services/mysql/etc:/etc/mysql:ro # 自定义配置文件
      - ./services/mysql/log:/var/log/mysql:rw
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    restart: always
    command: "--character-set-server=utf8"

  nginx:
    environment:
      MIRROR_SOURCE: tencent    
    image: hopher/nginx:1.15
    container_name: my_nginx
    build:
      context: .
      dockerfile: ./services/nginx/Dockerfile     
    depends_on:
      - php
    links:  # links 为 services name, 官方已废弃这个参数
      - php:php-fpm
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - src:/usr/share/nginx/html:rw
      - ./services/nginx/etc/conf.d:/etc/nginx/conf.d
      - ./services/nginx/etc/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
    command: nginx -g 'daemon off;'

  redis:
    environment:
      MIRROR_SOURCE: tencent    
    image: hopher/redis:3.2
    container_name: my_redis
    build:
      context: .
      dockerfile: ./services/redis/Dockerfile        
    ports:
      - "6379:6379"
    volumes:
      - src:/app:rw
    restart: always

  node:
    environment:
      MIRROR_SOURCE: tencent    
    image: hopher/node:11.12
    container_name: my_node
    build:
      context: .
      dockerfile: ./services/node/Dockerfile
      args:
        INSTALL_GITBOOK: "false"  # true | false
        INSTALL_DOCSIFY: "false"  # true | false
    ports:
      - "4000:4000"
    volumes:
      - src:/app:rw      
    stdin_open: true
    tty: true
    restart: always

  postgres:
    image: hopher/postgres:10
    container_name: my_postgres
    restart: always
    environment:
      MIRROR_SOURCE: tencent  
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    build:
      context: .
      dockerfile: ./services/postgres/Dockerfile
    volumes:
      - ./services/postgres/data:/var/lib/postgresql/data:rw
      - src:/app:rw

  tomcat:
    image: hopher/tomcat:8-jre8
    container_name: my_tomcat
    build:
      context: .
      dockerfile: ./services/tomcat/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - src:/app:rw 
      
  maven:
    image: hopher/maven:3.6.1-jdk-8-alpine
    container_name: my_maven
    #command: mvn clean package -P local
    build:
      context: .
      dockerfile: ./services/maven/Dockerfile
    volumes:
      - maven-repo:/root/.m2:rw     # 重用Maven本地存储库
      - app:/app:rw      
    #working_dir: /app
        
      
#    
# see: 
#   - https://docs.docker.com/engine/reference/commandline/volume_create/#driver-specific-options
#   - https://github.com/docker/compose/issues/2957
# 
# 相当于: mount -t none -o bind source_path dest_path
volumes:
  # 源码目录
  src:
    driver: local
    driver_opts:
      device: ${HOME}/src # docker 不支持相对路径
      o: bind